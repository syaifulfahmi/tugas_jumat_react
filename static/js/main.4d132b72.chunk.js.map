{"version":3,"sources":["LandingPage/Header.js","ComponentSoal/ReviewDarah.js","ComponentSoal/TujuanArtikel.js","LandingPage/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","src","alt","GolonganDarah","props","state","pesanDariState","ubahDataState","bind","e","preventDefault","this","setState","pesanDariProps","href","onClick","Component","TujuanArtikel","Footer","value1","value2","value3","alert","handleParameter","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kNAmBeA,MAjBf,WACC,OACC,6BACC,yBAAKC,IAAI,wGAAwGC,IAAI,0BACrH,4BAAI,4EACJ,4BACC,oWAEA,mS,mCCmBWC,G,wDAzBd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACVC,eAAgB,wCAEjB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALJ,E,0DAQJC,GACbA,EAAEC,iBACFC,KAAKC,SAAS,CAACN,eAAe,yZ,+BAGtB,IAAD,OACP,OACC,6BACA,2BAAIK,KAAKP,MAAMS,gBACf,2BAAIF,KAAKN,MAAMC,gBAEf,uBAAGQ,KAAK,IAAIC,QAAS,SAACN,GAAD,OAAK,EAAKF,cAAcE,KAAI,4E,GApBxBO,cCyBbC,E,kDAzBd,WAAYb,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACVC,eAAgB,UAEjB,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBALJ,E,0DAQJC,GACbA,EAAEC,iBACFC,KAAKC,SAAS,CAACN,eAAe,gF,+BAGtB,IAAD,OACP,OACC,6BACA,2BAAIK,KAAKP,MAAMS,gBACf,2BAAIF,KAAKN,MAAMC,gBAEf,uBAAGQ,KAAK,IAAIC,QAAS,SAACN,GAAD,OAAK,EAAKF,cAAcE,KAAI,wD,GApBxBO,aCgBbE,EAhBA,WAQd,OACC,6BACA,6BACA,uBAAGJ,KAAK,IAAIC,QAAS,SAACN,GAAD,OATtB,SAA0BU,EAAOC,EAAOC,EAAQZ,GAC/CA,EAAEC,iBACFY,MAAMH,GACNG,MAAMF,GACNE,MAAMD,GAKoBE,CAAgB,4FAA4F,uHAAuH,eAAed,KAA5Q,oBCOae,MAdf,WACE,OACE,6BACA,gCACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,yFACA,kBAAC,EAAD,CAAeX,eAAiB,+BAChC,kBAAC,EAAD,SCFgBY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.4d132b72.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Header (){\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<img src='https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkVXyLN_U2kTnB3VlDFxoCpLxV-6lT9RvwCg&usqp=CAU' alt=\"gambar golongan darah\"></img>\r\n\t\t\t<h2><i>Membahas Karakteristik Golongan Darah tipe O</i></h2>\r\n\t\t\t<h4>\r\n\t\t\t\t<p>Menebak kepribadian melalui astrologi mungkin sudah akrab di telinga orang-orang. Namun, kepribadian juga diyakini bisa ditebak melalui tipe golongan darah. Kepercayaan ini bermula dari budaya orang-orang Jepang. Di sana, golongan darah memiliki pengaruh yang besar terhadap kehidupan, pekerjaan, bahkan percintaan seseorang>\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>Meskipun tes kepribadian golongan darah belum memiliki dukungan ilmiah yang kuat, banyak orang, terutama orang Jepang mengklaim bahwa hal ini adalah benar adanya. Nah, berikut ini analisa tentang kepribadian seseorang yang memiliki golongan darah bertipe O.\r\n\t\t\t\t</p>\r\n\r\n\t\t\t</h4>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Header;","import React, {Component} from 'react';\r\nimport '../App.css';\r\n\r\nclass GolonganDarah extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tpesanDariState: 'Karakteristik golongan O adalah.....'\r\n\t\t}\r\n\t\tthis.ubahDataState = this.ubahDataState.bind(this)\r\n\t}\r\n\r\n\tubahDataState(e){\r\n\t\te.preventDefault()\r\n\t\tthis.setState({pesanDariState:\" Orang golongan darah O identik dengan sikapnya yang mudah beradaptasi dengan lingkungan baru atau easy-going. Mereka cenderung baik hati, pemurah, enerjik, terbuka, dan menghargai pendapat orang lain sehingga mudah disukai oleh banyak orang. Sayangnya, orang dengan golongan darah O ini mudah terpengaruh oleh orang lain, kurang fokus, keras kepala, dan lebih suka menjadi pengikut dibanding pemimpin.\"})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<p>{this.props.pesanDariProps}</p>\r\n\t\t\t<p>{this.state.pesanDariState}</p>\r\n\r\n\t\t\t<a href=\"/\" onClick={(e)=>this.ubahDataState(e)}><button>Yuk Lihat Karakteristik Golongan O</button></a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default GolonganDarah;","import React, {Component} from 'react';\r\n\r\nclass TujuanArtikel extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state={\r\n\t\t\tpesanDariState: '------'\r\n\t\t}\r\n\t\tthis.ubahDataState = this.ubahDataState.bind(this)\r\n\t}\r\n\r\n\tubahDataState(e){\r\n\t\te.preventDefault()\r\n\t\tthis.setState({pesanDariState:\"- Pemenuhan Tugas React JS Diklat Programming, NIOMIC X BKPSDM Karawang -\"})\r\n\t}\r\n\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<div>\r\n\t\t\t<p>{this.props.pesanDariProps}</p>\r\n\t\t\t<p>{this.state.pesanDariState}</p>\r\n\r\n\t\t\t<a href=\"/\" onClick={(e)=>this.ubahDataState(e)}><button>Tujuan Artikel</button></a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default TujuanArtikel;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\r\n\tfunction handleParameter (value1,value2,value3, e){\r\n\t\te.preventDefault() //agar tidak mereload setelah muncul alert\r\n\t\talert(value1)\r\n\t\talert(value2)\r\n\t\talert(value3)\r\n\t}\r\n\treturn(\r\n\t\t<div>\r\n\t\t<br></br>\r\n\t\t<a href=\"/\" onClick={(e)=>handleParameter('Sumber artikel: https://www.halodoc.com/artikel/inilah-kepribadian-menurut-golongan-darah','Sumber Gambar: https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQkVXyLN_U2kTnB3VlDFxoCpLxV-6lT9RvwCg&usqp=CAU','Terima Kasih',e)}>Source Artikel</a>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport Header from './LandingPage/Header';\nimport GolonganDarah from './ComponentSoal/ReviewDarah';\nimport TujuanArtikel from './ComponentSoal/TujuanArtikel';\nimport Footer from './LandingPage/Footer';\n\nfunction App() {\n  return (\n    <div>\n    <center>\n    <Header />\n    <GolonganDarah/>\n    <h4>=========================================================</h4>\n    <TujuanArtikel pesanDariProps = \"Artikel ini dibuat untuk: \" />\n    <Footer />\n    </center>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}